:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextureLayered.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureLayered:

TextureLayered
==============

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`Cubemap<class_Cubemap>`, :ref:`CubemapArray<class_CubemapArray>`, :ref:`Texture2DArray<class_Texture2DArray>`

Base class for 3D texture types.

Description
-----------

Base class for :ref:`Texture2DArray<class_Texture2DArray>`, :ref:`Cubemap<class_Cubemap>` and :ref:`CubemapArray<class_CubemapArray>`. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. Data is set on a per-layer basis. For :ref:`Texture2DArray<class_Texture2DArray>`\ s, the layer specifies the array layer.

Methods
-------

+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`create_from_images<class_TextureLayered_method_create_from_images>` **(** :ref:`Array<class_Array>` images **)**                 |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Format<enum_Image_Format>`      | :ref:`get_format<class_TextureLayered_method_get_format>` **(** **)** const                                                            |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_height<class_TextureLayered_method_get_height>` **(** **)** const                                                            |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>`             | :ref:`get_layer_data<class_TextureLayered_method_get_layer_data>` **(** :ref:`int<class_int>` layer **)** const                        |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_layers<class_TextureLayered_method_get_layers>` **(** **)** const                                                            |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_width<class_TextureLayered_method_get_width>` **(** **)** const                                                              |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`update_layer<class_TextureLayered_method_update_layer>` **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)** |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_TextureLayered_method_create_from_images:

- :ref:`Error<enum_@GlobalScope_Error>` **create_from_images** **(** :ref:`Array<class_Array>` images **)**

----

.. _class_TextureLayered_method_get_format:

- :ref:`Format<enum_Image_Format>` **get_format** **(** **)** const

Returns the current format being used by this texture. See :ref:`Format<enum_Image_Format>` for details.

----

.. _class_TextureLayered_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** const

Returns the height of the texture. Height is typically represented by the Y-axis.

----

.. _class_TextureLayered_method_get_layer_data:

- :ref:`Image<class_Image>` **get_layer_data** **(** :ref:`int<class_int>` layer **)** const

Returns an :ref:`Image<class_Image>` resource with the data from specified ``layer``.

----

.. _class_TextureLayered_method_get_layers:

- :ref:`int<class_int>` **get_layers** **(** **)** const

----

.. _class_TextureLayered_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** const

Returns the width of the texture. Width is typically represented by the X-axis.

----

.. _class_TextureLayered_method_update_layer:

- void **update_layer** **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)**

